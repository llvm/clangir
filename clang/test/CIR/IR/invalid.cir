// Test attempts to build bogus CIR
// RUN: cir-tool %s -verify-diagnostics -split-input-file

// expected-error@+2 {{'cir.cst' op nullptr expects pointer type}}
func.func @p0() {
  %1 = cir.cst(#cir.null : !cir.ptr<i32>) : i32
  cir.return
}

// -----

// expected-error@+2 {{'cir.cst' op result type ('i32') must be '!cir.bool' for 'true'}}
func.func @b0() {
  %1 = cir.cst(true) : i32
  cir.return
}

// -----

func.func @if0() {
  %0 = cir.cst(true) : !cir.bool
  cir.if %0 {
    %6 = cir.cst(3 : i32) : i32
    // expected-error@+1 {{'cir.yield' op must not produce results in 'if' operation}}
    cir.yield %6 : i32
  }
  cir.return
}
