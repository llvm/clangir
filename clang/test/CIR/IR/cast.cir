// RUN: cir-opt %s | cir-opt | FileCheck %s
!s32i = !cir.int<s, 32>

module  {
  cir.func @yolo(%arg0 : !s32i) {
    %0 = cir.alloca !cir.array<!s32i x 10>, cir.ptr<!cir.array<!s32i x 10>>, ["x", init]
    %a = cir.cast (int_to_bool, %arg0 : !s32i), !cir.bool

    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i>
    %4 = cir.const(#cir.int<0> : !s32i) : !s32i
    cir.return
  }

  cir.func @bitcast(%p: !cir.ptr<!s32i>) {
    %2 = cir.cast(bitcast, %p : !cir.ptr<!s32i>), !cir.ptr<f32>
    cir.return
  }
}

// CHECK: cir.func @yolo(%arg0: !s32i)
// CHECK: %1 = cir.cast(int_to_bool, %arg0 : !s32i), !cir.bool
// CHECK: %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i>
// CHECK: cir.func @bitcast
// CHECK: %0 = cir.cast(bitcast, %arg0 : !cir.ptr<!s32i>), !cir.ptr<f32>
