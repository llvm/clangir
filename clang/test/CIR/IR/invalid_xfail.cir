// Test attempts to build bogus CIR
// RUN: cir-opt %s -verify-diagnostics -split-input-file
// XFAIL: *

#false = #cir.bool<false> : !cir.bool
#true = #cir.bool<true> : !cir.bool
cir.func @b0() {
  cir.scope {
    cir.while {  // expected-error {{expected condition region to terminate with 'cir.condition'}}
      cir.yield
    } do {
      cir.br ^bb1
    ^bb1:
      cir.return
    }
  }
  cir.return
}

// -----

cir.func @invalid_cond_region_terminator(%arg0 : !cir.bool) -> !cir.void {
  cir.do { // expected-error {{op expected condition region to terminate with 'cir.condition'}}
    cir.yield
  } while {
    cir.yield
  }
  cir.return
}

// -----

cir.func @invalidConditionTerminator (%arg0 : !cir.bool) -> !cir.void {
  cir.for : cond { // expected-error {{op expected condition region to terminate with 'cir.condition'}}
    cir.yield
  } body {
    cir.yield
  } step {
    cir.yield
  }
  cir.return
}
