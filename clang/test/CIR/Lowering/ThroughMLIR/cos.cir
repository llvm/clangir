// RUN: cir-opt %s -cir-to-mlir -o %t.mlir
// RUN: FileCheck %s --input-file %t.mlir

module {
  cir.func @foo() {
    %1 = cir.const(#cir.fp<1.0> : !cir.float) : !cir.float
    %2 = cir.const(#cir.fp<1.0> : !cir.double) : !cir.double
    %3 = cir.const(#cir.fp<1.0> : !cir.long_double<!cir.f80>) : !cir.long_double<!cir.f80>
    %4 = cir.const(#cir.fp<1.0> : !cir.long_double<!cir.double>) : !cir.long_double<!cir.double>
    %5 = cir.cos %1 : !cir.float
    %6 = cir.cos %2 : !cir.double
    %7 = cir.cos %3 : !cir.long_double<!cir.f80>
    %8 = cir.cos %4 : !cir.long_double<!cir.double>
    cir.return
  }
}

// CHECK: module {
// CHECK:   func.func @foo() {
// CHECK:     %cst = arith.constant 1.000000e+00 : f32
// CHECK:     %cst_0 = arith.constant 1.000000e+00 : f64
// CHECK:     %cst_1 = arith.constant 1.000000e+00 : f80
// CHECK:     %cst_2 = arith.constant 1.000000e+00 : f64
// CHECK:     %0 = math.cos %cst : f32
// CHECK:     %1 = math.cos %cst_0 : f64
// CHECK:     %2 = math.cos %cst_1 : f80
// CHECK:     %3 = math.cos %cst_2 : f64
// CHECK:     return
// CHECK:   }
// CHECK: }
