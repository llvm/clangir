// RUN: cir-tool %s -cir-to-memref -o - | FileCheck %s -check-prefix=MLIR
// RUN: cir-tool %s -cir-to-llvm -o - | FileCheck %s -check-prefix=LLVM
// XFAIL: *

module {
  func.func @foo() {
    %0 = cir.alloca i32, cir.ptr <i32>, [cinit]
    %1 = cir.cst(1 : i32) : i32
    cir.return
  }
}

//      MLIR: module  {
// MLIR-NEXT:   func.func @foo() {
// MLIR-NEXT:     %0 = memref.alloc() : memref<i32>
// MLIR-NEXT:     {{.*}}arith.constant 1 : i32
// MLIR-NEXT:     cir.return
// MLIR-NEXT:   }
// MLIR-NEXT: }

//      LLVM: module  {
// LLVM-NEXT:   llvm.func @malloc(i64)
// LLVM-NEXT:   llvm.func @foo() {
// LLVM-NEXT:     %0 = llvm.mlir.constant(1 : index) : i64
